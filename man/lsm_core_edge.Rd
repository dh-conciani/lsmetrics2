% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lsm_core_edge.R
\name{lsm_core_edge}
\alias{lsm_core_edge}
\title{Identify the core and edge of landscape elements}
\usage{
lsm_core_edge(
  input,
  output = NULL,
  zero_as_na = FALSE,
  edge_depth,
  type = "all",
  ncell = FALSE,
  calculate_area = FALSE,
  core_edge_original = FALSE,
  calculate_percentage = FALSE,
  core_number = FALSE,
  buffer_radius = NULL,
  buffer_circular = FALSE
)
}
\arguments{
\item{input}{\verb{[character=""]} \cr Habitat map, following a binary classification
(e.g. values 1,0 or 1,NA for habitat,non-habitat).}

\item{output}{\verb{[character=""]} \cr Map name output inside GRASS Data Base.}

\item{zero_as_na}{\verb{[logical(1)=FALSE]} \cr If \code{TRUE}, the function treats
non-habitat cells as null; if \code{FALSE}, the function converts non-habitat zero
cells to null cells.}

\item{edge_depth}{\verb{[numeric]} \cr Integer indicating edge distance in meters
considered adjacent to form a patch.}

\item{type}{\verb{[character=""]} \cr}

\item{calculate_area}{\verb{[logical(1)=FALSE]} \cr}

\item{calculate_percentage}{\verb{[logical(1)=FALSE]} \cr}

\item{core_number}{\verb{[logical(1)=FALSE]} \cr}

\item{buffer_radius}{\verb{[numeric]} \cr}

\item{buffer_circular}{\verb{[logical(1)=FALSE]} \cr}
}
\description{
Identify the core and edge of landscape elements for each pixel. Calculate
area, original area and percentage of core and edge.
}
\examples{
library(lsmetrics)
library(terra)

# read habitat data
f <- system.file("raster/toy_landscape_habitat.tif", package = "lsmetrics")
r <- terra::rast(f)

# plot
plot(r, legend = FALSE, axes = FALSE, main = "Binary habitat")
plot(as.polygons(r, dissolve = FALSE), lwd = .1, add = TRUE)
plot(as.polygons(r), add = TRUE)
text(r)

# find grass
path_grass <- as.character(link2GI::findGRASS()[1]) # windows users need to find, e.g. "C:/Program Files/GRASS GIS 8.2"

# create grassdb
rgrass::initGRASS(gisBase = path_grass,
                  SG = r,
                  gisDbase = "grassdb",
                  location = "newLocation",
                  mapset = "PERMANENT",
                  override = TRUE)

# import raster from r to grass
rgrass::write_RAST(x = r, flags = c("o", "overwrite", "quiet"), vname = "r")

# core and edge
lsmetrics::lsm_core_edge(input = "r",
                         edge_depth = 100,
                         type = "all",
                         core_number = TRUE,
                         core_edge_original = TRUE,
                         calculate_area = TRUE,
                         calculate_percentage = TRUE,
                         buffer_radius = 100,
                         buffer_circular = FALSE)

# files
# rgrass::execGRASS(cmd = "g.list", type = "raster")

# import from grass to r
r_core100 <- rgrass::read_RAST("r_core100", flags = "quiet", return_format = "terra")
r_core100_area_ha <- rgrass::read_RAST("r_core100_area_ha", flags = "quiet", return_format = "terra")
r_core100_area_ha_original <- rgrass::read_RAST("r_core100_area_ha_original", flags = "quiet", return_format = "terra")
r_core100_core_number <- rgrass::read_RAST("r_core100_core_number_original", flags = "quiet", return_format = "terra")
r_core100_pct_buf100 <- rgrass::read_RAST("r_core100_pct_buf100", flags = "quiet", return_format = "terra")

r_edge100 <- rgrass::read_RAST("r_edge100", flags = "quiet", return_format = "terra")
r_edge100_area_ha <- rgrass::read_RAST("r_edge100_area_ha", flags = "quiet", return_format = "terra")
r_edge100_area_ha_original <- rgrass::read_RAST("r_edge100_area_ha_original", flags = "quiet", return_format = "terra")
r_edge100_pct_buf100 <- rgrass::read_RAST("r_edge100_pct_buf100", flags = "quiet", return_format = "terra")

# plot
plot(r_core100, legend = FALSE, axes = FALSE, main = "Core")
plot(as.polygons(r, dissolve = FALSE), lwd = .1, add = TRUE)
plot(as.polygons(r), add = TRUE)
text(r_core100)

plot(r_core100_area_ha, legend = FALSE, axes = FALSE, main = "Core area (ha)")
plot(as.polygons(r, dissolve = FALSE), lwd = .1, add = TRUE)
plot(as.polygons(r), add = TRUE)
text(r_core100_area_ha)

plot(r_core100_area_ha_original, legend = FALSE, axes = FALSE, main = "Core area original (ha)")
plot(as.polygons(r, dissolve = FALSE), lwd = .1, add = TRUE)
plot(as.polygons(r), add = TRUE)
text(r_core100_area_ha_original)

plot(r_core100_core_number, legend = FALSE, axes = FALSE, main = "Number of cores")
plot(as.polygons(r, dissolve = FALSE), lwd = .1, add = TRUE)
plot(as.polygons(r), add = TRUE)
text(r_core100_core_number)

plot(r_core100_pct_buf100, legend = FALSE, axes = FALSE, main = "Core percentage (buffer 100 m)")
plot(as.polygons(r, dissolve = FALSE), lwd = .1, add = TRUE)
plot(as.polygons(r), add = TRUE)
text(r_core100_pct_buf100, cex = .75)


plot(r_edge100, legend = FALSE, axes = FALSE, main = "Edge")
plot(as.polygons(r, dissolve = FALSE), lwd = .1, add = TRUE)
plot(as.polygons(r), add = TRUE)
text(r_edge100)

plot(r_edge100_area_ha, legend = FALSE, axes = FALSE, main = "Edge area (ha)")
plot(as.polygons(r, dissolve = FALSE), lwd = .1, add = TRUE)
plot(as.polygons(r), add = TRUE)
text(r_edge100_area_ha)

plot(r_edge100_area_ha_original, legend = FALSE, axes = FALSE, main = "Edge area original (ha)")
plot(as.polygons(r, dissolve = FALSE), lwd = .1, add = TRUE)
plot(as.polygons(r), add = TRUE)
text(r_edge100_area_ha_original)

plot(r_edge100_pct_buf100, legend = FALSE, axes = FALSE, main = "Edge percentage (buffer 100 m)")
plot(as.polygons(r, dissolve = FALSE), lwd = .1, add = TRUE)
plot(as.polygons(r), add = TRUE)
text(r_edge100_pct_buf100, cex = .75)

# delete grassdb
unlink("grassdb", recursive = TRUE)
}
